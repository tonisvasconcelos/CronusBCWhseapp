name: CI/CD

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build shared package
        run: pnpm --filter @cronusapp/shared build

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Test
        run: pnpm test

      - name: Build (apps/web)
        working-directory: apps/web
        env:
          # Use GitHub Secrets for production, fallback to demo values
          VITE_BC_TENANT_ID: ${{ secrets.BC_TENANT_ID || 'demo-tenant' }}
          VITE_BC_ENVIRONMENT: ${{ secrets.BC_ENVIRONMENT || 'demo-environment' }}
          VITE_BC_COMPANY_ID: ${{ secrets.BC_COMPANY_ID || 'demo-company' }}
          VITE_BC_BASE_URL: ${{ secrets.BC_BASE_URL || 'https://api.businesscentral.dynamics.com/v2.0' }}
          VITE_AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID || 'demo-tenant-id' }}
          VITE_AZURE_AD_CLIENT_ID_SPA: ${{ secrets.AZURE_AD_CLIENT_ID_SPA || 'demo-client-id' }}
          VITE_AZURE_AD_CLIENT_ID_API: ${{ secrets.AZURE_AD_CLIENT_ID_API || 'demo-api-client-id' }}
          VITE_AZURE_AD_CLIENT_SECRET_API: ${{ secrets.AZURE_AD_CLIENT_SECRET_API || 'demo-secret' }}
          VITE_APP_NAME: ${{ secrets.VITE_APP_NAME || 'CRONUS WHSE_BC and REACT' }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL || 'http://localhost:4000' }}
          VITE_USE_MOCKS: ${{ secrets.VITE_USE_MOCKS || 'true' }}
        run: pnpm build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/web/dist

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
